{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","todoList","handleSubmit","Event","taskDesc","target","elements","todoTask","value","length","setState","reset","preventDefault","deleteTodoTask","index","taskArray","splice","className","onSubmit","this","type","name","placeholder","autoComplete","map","item","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA8DeA,E,4MAzDbC,MAAQ,CACNC,SAAW,I,EAuCfC,aAAe,SAACC,GACd,IAAIC,EAAWD,EAAME,OAAOC,SAASC,SAASC,MAC3CJ,EAASK,OAAO,IACjB,EAAKC,SAAS,CACZT,SAAS,GAAD,mBAAK,EAAKD,MAAMC,UAAhB,CAA0BG,MAEpCD,EAAME,OAAOM,SAEjBR,EAAMS,kB,EAELC,eAAiB,SAACV,EAAMW,GACvB,IAAIC,EAAS,YAAO,EAAKf,MAAMC,UAC/Bc,EAAUC,OAAOF,EAAM,GACvB,EAAKJ,SAAS,CAACT,SAASc,K,4CAjDxB,WAAS,IAAD,OACR,OACE,gCACA,qBAAKE,UAAU,iCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,aAAd,0BAGJ,sBAAMA,UAAU,OAAOC,SAAUC,KAAKjB,aAAtC,SACE,sBAAKe,UAAU,cAAf,UACE,uBAAOG,KAAK,OAAOC,KAAK,WAAWJ,UAAU,eAAeK,YAAY,yBAAyBC,aAAa,QAC9G,qBAAKN,UAAU,qBAAf,SACE,wBAAQG,KAAO,SAASH,UAAU,0BAAlC,wBAKJ,oBAAIA,UAAU,aAAd,SAEIE,KAAKnB,MAAMC,SAASuB,KAClB,SAACC,EAAMX,GACL,OAAO,qBAAIG,UAAU,kBAAd,UACJQ,EACD,wBAAQR,UAAU,4CAA4CS,QAAS,SAACvB,GAAW,EAAKU,eAAeV,EAAMW,IAA7G,sBAF0CA,e,GA3BxCa,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc5417d0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\n\nclass App extends Component {\n  \n  state = {\n    todoList : []\n  }\n\n  render(){\n  return (\n    <div>\n    <div className=\"jumbotron jumbotron-fluid py-2\">\n      <div className=\"container\">\n        <h1 className=\"display-2 \">Todo App</h1>\n      </div>\n    </div>\n    <form className=\"mb-3\" onSubmit={this.handleSubmit}>\n      <div className=\"input-group\">\n        <input type=\"text\" name=\"todoTask\" className=\"form-control\" placeholder=\"Please enter your task\" autoComplete=\"off\"/>\n        <div className=\"input-group-append\">\n          <button type = \"submit\" className=\"btn btn-outline-success\">Add</button>\n        </div>\n      </div>\n      </form>\n      \n      <ul className=\"list-group\">\n        {\n          this.state.todoList.map(\n            (item, index) => {\n              return <li className=\"list-group-item\" key={index}>\n                {item}\n                <button className=\"btn btn-sm btn-outline-danger float-right\" onClick={(Event) => {this.deleteTodoTask(Event,index)}}>Delete</button>\n              </li>\n\n            }\n          )\n        }\n      </ul>\n      \n      </div>\n\n  );\n}\n\nhandleSubmit = (Event)=> {\n  var taskDesc = Event.target.elements.todoTask.value;\n  if(taskDesc.length>0){\n    this.setState({\n      todoList:[...this.state.todoList, taskDesc]\n    })\n    Event.target.reset();\n  }\nEvent.preventDefault();\n}\n deleteTodoTask = (Event,index) => {\n  var taskArray = [...this.state.todoList]\n  taskArray.splice(index,1)\n  this.setState({todoList:taskArray})\n }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}